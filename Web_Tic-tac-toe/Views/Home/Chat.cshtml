@model Web_Tic_tac_toe.Models.EF.User

@{
    if (Session["userID"] != null)
    {
        <p>@Session["userID"]</p>
        <p>@Session["userName"]</p>
    }

}


@{
    ViewBag.Title = "Chat";
}

<h2>Chat-room</h2>

<div class="main">
    <div id="loginBlock">
        Введите логин:<br />
        <input id="txtUserName" type="text" />
        <input id="btnLogin" type="button" value="Войти" />
    </div>


    <div id="chatBody" type="hidden">
        <div id="header"></div>
        <div id="inputForm">
            <input type="text" id="message" />
            <input type="button" id="sendmessage" value="Отправить" />
        </div>
        <div id="chatroom"></div>

        <div id="chatusers">
            <p><b>Все пользователи</b></p>
        </div>
    </div>
    <input id="hdId" type="hidden" />
    <input id="username" type="hidden" />
</div>


<script src="~/Scripts/jquery-2.2.2.min.js"></script>
<script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
<!--Ссылка на автоматически сгенерированный скрипт хаба SignalR -->
<script src="~/signalr/hubs"></script>


<script>
    $(function () {

        $('#chatBody').hide();
        $('#loginBlock').show();
        // Ссылка на автоматически-сгенерированный прокси хаба
        var chat = $.connection.chatHub;
        // Объявление функции, которую хаб вызывает при получении сообщений
        chat.client.addMessage = function (currentTime, name, message) {
            // Добавление сообщений на веб-страницу
            $('#chatroom').prepend('<p> ' + '<i>' + currentTime + '&emsp;</i>' + '<b>' + htmlEncode(name)
                + '</b>: ' + htmlEncode(message) + '</p>');
        };

        // Функция, вызываемая при подключении нового пользователя
        chat.client.onConnected = function (id, userName, allUsers) {

            $('#loginBlock').hide();
            $('#chatBody').show();
            // установка в скрытых полях имени и id текущего пользователя
            $('#hdId').val(id);
            $('#username').val(userName);
            $('#header').html('<h3>Добро пожаловать, ' + userName + '</h3>');

            // Добавление всех пользователей
            for (i = 0; i < allUsers.length; i++) {

                AddUser(allUsers[i].ConnectionId, allUsers[i].Name);
            }
        }

        // Добавляем нового пользователя
        chat.client.onNewUserConnected = function (id, name) {

            AddUser(id, name);
        }

        // Удаляем пользователя
        chat.client.onUserDisconnected = function (id, userName) {
            $('#' + id).remove();
        }

        // Открываем соединение
        //$.connection.hub.start({ transport: 'longPolling' })
        $.connection.hub.start({ transport: 'longPolling' }).done(function () {

            $('#sendmessage').click(function () {
                // Вызываем у хаба метод Send
                chat.server.send($('#username').val(), $('#message').val());
                $('#message').val('');
            });

            // обработка логина
            $("#btnLogin").click(function () {
                var name = $("#txtUserName").val();
                if (name.length > 0) {
                    chat.server.connect(name);
                }
                else {
                    alert("Введите имя");
                }
            });
        });
    });
    // Кодирование тегов
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }
    //Добавление нового пользователя
    function AddUser(id, name) {
        var userId = $('#hdId').val();
        if (userId != id) {
            $("#chatusers").append('<p id="' + id + '"><b>' + name + '</b></p>');
        }
    }



</script>
